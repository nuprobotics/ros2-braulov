[0.000000] (-) TimerEvent: {}
[0.001135] (task01) JobQueued: {'identifier': 'task01', 'dependencies': OrderedDict([('task01', '/workspace/Practice02/install/task01')])}
[0.001326] (task01) JobStarted: {'identifier': 'task01'}
[0.099267] (-) TimerEvent: {}
[0.199754] (-) TimerEvent: {}
[0.300329] (-) TimerEvent: {}
[0.316606] (task01) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/workspace/Practice02/src/task01', 'env': {'HOSTNAME': 'cd2522a7dbeb', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/iron/lib/x86_64-linux-gnu:/opt/ros/iron/lib', 'HOME': '/root', 'OLDPWD': '/workspace', 'ROS_PYTHON_VERSION': '3', 'ROS_DISTRO': 'iron', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'TERM': 'xterm', 'PATH': '/opt/ros/iron/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'LANG': 'C.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'AMENT_PREFIX_PATH': '/workspace/Practice02/install/task01:/opt/ros/iron', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'PWD': '/workspace/Practice02/build/task01', 'LC_ALL': 'C.UTF-8', 'PYTHONPATH': '/workspace/Practice02/install/task01/lib/python3.10/site-packages:/opt/ros/iron/lib/python3.10/site-packages', 'COLCON': '1', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/workspace/Practice02/build/task01/pytest.xml --junit-prefix=task01 -o cache_dir=/workspace/Practice02/build/task01/.pytest_cache'}, 'shell': False}
[0.400497] (-) TimerEvent: {}
[0.501132] (-) TimerEvent: {}
[0.601651] (-) TimerEvent: {}
[0.689078] (task01) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.689538] (task01) StdoutLine: {'line': b'platform linux -- Python 3.10.12, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.694371] (task01) StdoutLine: {'line': b'cachedir: /workspace/Practice02/build/task01/.pytest_cache\n'}
[0.694646] (task01) StdoutLine: {'line': b'rootdir: /workspace/Practice02/src/task01\n'}
[0.694839] (task01) StdoutLine: {'line': b'plugins: ament-copyright-0.14.4, ament-pep257-0.14.4, launch-testing-ros-0.24.1, ament-lint-0.14.4, launch-testing-2.0.4, ament-xmllint-0.14.4, ament-flake8-0.14.4, colcon-core-0.17.0\n'}
[0.701742] (-) TimerEvent: {}
[0.802204] (-) TimerEvent: {}
[0.811262] (task01) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.811691] (task01) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[0.811910] (task01) StdoutLine: {'line': b'\n'}
[0.819993] (task01) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 33%]\x1b[0m\n'}
[0.902365] (-) TimerEvent: {}
[1.002945] (-) TimerEvent: {}
[1.008648] (task01) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[1.031190] (task01) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[1.031534] (task01) StdoutLine: {'line': b'\n'}
[1.031735] (task01) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[1.031915] (task01) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[1.032063] (task01) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[1.082788] (task01) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[1.083234] (task01) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 1 code style errors / warnings:\x1b[0m\n'}
[1.083409] (task01) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:1:1: F401 'setuptools.find_packages' imported but unused\x1b[0m\n"}
[1.083571] (task01) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.083844] (task01) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.084007] (task01) StdoutLine: {'line': b'\n'}
[1.084152] (task01) StdoutLine: {'line': b"./setup.py:1:1: F401 'setuptools.find_packages' imported but unused\n"}
[1.084296] (task01) StdoutLine: {'line': b'from setuptools import find_packages, setup\n'}
[1.084440] (task01) StdoutLine: {'line': b'^\n'}
[1.084584] (task01) StdoutLine: {'line': b'\n'}
[1.084788] (task01) StdoutLine: {'line': b"1     F401 'setuptools.find_packages' imported but unused\n"}
[1.084944] (task01) StdoutLine: {'line': b'\n'}
[1.085089] (task01) StdoutLine: {'line': b'6 files checked\n'}
[1.085234] (task01) StdoutLine: {'line': b'1 errors\n'}
[1.085379] (task01) StdoutLine: {'line': b'\n'}
[1.085524] (task01) StdoutLine: {'line': b"'F'-type errors: 1\n"}
[1.085687] (task01) StdoutLine: {'line': b'\n'}
[1.085869] (task01) StdoutLine: {'line': b'Checked files:\n'}
[1.086018] (task01) StdoutLine: {'line': b'\n'}
[1.086155] (task01) StdoutLine: {'line': b'* ./setup.py\n'}
[1.086235] (task01) StdoutLine: {'line': b'* ./task01/__init__.py\n'}
[1.086313] (task01) StdoutLine: {'line': b'* ./task01/receiver.py\n'}
[1.086390] (task01) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.086478] (task01) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.086573] (task01) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.086674] (task01) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.086782] (task01) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.086866] (task01) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.086987] (task01) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.087065] (task01) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.087142] (task01) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.087220] (task01) StderrLine: {'line': b'\n'}
[1.087296] (task01) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.087372] (task01) StdoutLine: {'line': b'------ generated xml file: /workspace/Practice02/build/task01/pytest.xml -------\n'}
[1.087450] (task01) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.087528] (task01) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 1 code style ...\n'}
[1.087608] (task01) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m1 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.39s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.103146] (-) TimerEvent: {}
[1.185382] (task01) CommandEnded: {'returncode': 1}
[1.186406] (task01) TestFailure: {'identifier': 'task01'}
[1.186650] (task01) JobEnded: {'identifier': 'task01', 'rc': 0}
[1.187367] (-) EventReactorShutdown: {}
